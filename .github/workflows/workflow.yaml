name: Build CI For golang

on:
  push:
#  schedule:
#    - cron: 0 0 1 * *
env:
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest]
#        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set GOPATH
        run: |
             echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
             echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
             echo "##[set-env name=TAG_NAME;]$(date +%Y%m%d_%H%S_%s)"
             echo "##[set-env name=NAME;]$(date +%Y%m%d)"
             echo "::set-env name=MAC_TESTTIMES::2"
        shell: bash
      - name: Test
        id: GenAllPlatformFile
        run:
          ./runMqtt.sh

      - name: backup
        id: backupPlatformFile
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd app/mqtt
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"
          echo "##[set-env name=NAME;]$(date +%Y%m%d_%H%S_%s)"
          tar zcvf app${NAME}.tgz release config *.bat
          ls *.tgz

      - name: Upload compile result to cowtransfer
        if: steps.backupPlatformFile.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
        run: |
              curl -fsSL git.io/file-transfer | sh
              echo ./transfer cow app/mqtt/app${NAME}.tgz 2>&1 | tee cowtransfer.log
              ./transfer cow -s app/mqtt/app${NAME}.tgz | tee cowtransfer.log
              cat cowtransfer.log
              echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

      - name: Upload firmware to WeTransfer
        if: steps.backupPlatformFile.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
        run: |
            curl -fsSL git.io/file-transfer | sh
            ./transfer wet -s --no-progress app/mqtt/app${NAME}.tgz | tee wetransfer.log
            echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"



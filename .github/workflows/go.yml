name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: 0 * * * *

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set GOPATH
      run: |
        echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
        echo "::set-env name=action_state::yellow"
        echo "::set-env name=OUTPUT::main"
 #        echo $LDFLAGS
      shell:
        bash

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        echo "::set-env name=Version::0.1"
        echo "::set-env name=Author::bigdot"
        echo "::set-env name=MAC_TestTimes::100"
        echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
        echo "##[set-env name=TAG_NAME;]$(date +%Y%m%d)"
        echo "##[set-env name=NAME;]$(date +%Y%m%d)"
        echo "##[set-env name=GitTag;]MyGit$$(git describe --tags)"
        echo "##[set-env name=BuildTime;]$(date +%FT%T%z)"
        echo "##[set-env name=GitCommit;]MyGit$(git rev-parse HEAD)"
        echo "##[set-env name=GoVersion;]$(go version | sed 's/[ ][ ]*/_/g')"
        echo "::set-env name=LDFLAGS::-X ${OUTPUT}.Version=${{env.Version}} -X ${OUTPUT}.GitTag=${{env.GitTag}} -X ${OUTPUT}.BuildTime=${{env.BuildTime}} -X ${OUTPUT}.GitCommit=${{env.GitCommit}} -X ${OUTPUT}.GoVersion=${{env.GoVersion}} -X ${OUTPUT}.Author=${{env.Author}}"
        echo "LD = ${LDFLAGS} GitTag = ${MAC_TestTimes}"
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
      shell: bash

    - name: Build
#      run: go build -v .
      run:
        (cd ./app/mqtt;go build -o $OUTPUT)
#        ./build.sh

    - name: Test
      run:
#        go test -v .
         ./$OUTPUT --version
         ./$OUTPUT

    - name: Deploy stage
      uses: easingthemes/ssh-deploy@v2.1.2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        ARGS: "-rltgoDzvO"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SOURCE: $OUTPUT
        TARGET: ${{ secrets.REMOTE_TARGET }}

